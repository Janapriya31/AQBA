{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janap\\\\OneDrive\\\\Desktop\\\\one drive\\\\OneDrive\\\\Documents\\\\AQBA-AdminWeb\\\\AQBA-AdminWeb\\\\src\\\\employee\\\\pages\\\\EmployeeLogin.js\",\n  _s = $RefreshSig$();\n// src/employee/pages/EmployeeLogin.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Ensure you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeLogin = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (username && password) {\n      setLoading(true); // Start loading\n      try {\n        const response = await fetch('http://localhost:5000/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username,\n            password\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          alert(errorData.error); // Show specific error messages\n          setLoading(false); // Stop loading\n          return;\n        }\n        const result = await response.json();\n        console.log('Login successful:', result);\n\n        // Check if the user role is 'Employee'\n        // Example for EmployeeLogin.js\n        if (result.user.role !== 'Employee') {\n          alert('Access denied. You are not authorized to log in as an Employee.');\n          setLoading(false); // Stop loading\n          return;\n        }\n\n        // Optionally, store user info in local storage\n        localStorage.setItem('user', JSON.stringify(result.user));\n        navigate('/employee/dashboard'); // Redirect to the employee dashboard\n      } catch (error) {\n        console.error('Error during login:', error);\n        alert('Error during login. Please try again.');\n        setLoading(false); // Stop loading on error\n      }\n    } else {\n      alert('Please enter valid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employee Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            placeholder: \"Enter your username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => navigate(-1),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? 'Logging in...' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeLogin, \"dcnk+7idi0lkj5PFbszV9JH+/uk=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeLogin;\nexport default EmployeeLogin;\nvar _c;\n$RefreshReg$(_c, \"EmployeeLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","EmployeeLogin","_s","username","setUsername","password","setPassword","loading","setLoading","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","alert","error","result","console","log","user","role","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/janap/OneDrive/Desktop/one drive/OneDrive/Documents/AQBA-AdminWeb/AQBA-AdminWeb/src/employee/pages/EmployeeLogin.js"],"sourcesContent":["// src/employee/pages/EmployeeLogin.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Ensure you have a CSS file for styling\r\n\r\nconst EmployeeLogin = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false); // Loading state\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        if (username && password) {\r\n            setLoading(true); // Start loading\r\n            try {\r\n                const response = await fetch('http://localhost:5000/login', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ username, password }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    alert(errorData.error); // Show specific error messages\r\n                    setLoading(false); // Stop loading\r\n                    return;\r\n                }\r\n\r\n                const result = await response.json();\r\n                console.log('Login successful:', result);\r\n\r\n                // Check if the user role is 'Employee'\r\n                // Example for EmployeeLogin.js\r\n                if (result.user.role !== 'Employee') {\r\n                   alert('Access denied. You are not authorized to log in as an Employee.');\r\n                setLoading(false); // Stop loading\r\n                return;\r\n}\r\n\r\n\r\n                // Optionally, store user info in local storage\r\n                localStorage.setItem('user', JSON.stringify(result.user));\r\n\r\n                navigate('/employee/dashboard'); // Redirect to the employee dashboard\r\n            } catch (error) {\r\n                console.error('Error during login:', error);\r\n                alert('Error during login. Please try again.');\r\n                setLoading(false); // Stop loading on error\r\n            }\r\n        } else {\r\n            alert('Please enter valid credentials');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-body\">\r\n            <div className=\"login-container\">\r\n                <h2>Employee Login</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Enter your username\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button type=\"button\" onClick={() => navigate(-1)}>Back</button>\r\n                        <button type=\"submit\" disabled={loading}>{loading ? 'Logging in...' : 'Login'}</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeeLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}