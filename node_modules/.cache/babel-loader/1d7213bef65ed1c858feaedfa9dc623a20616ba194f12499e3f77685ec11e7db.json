{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janap\\\\OneDrive\\\\Desktop\\\\app\\\\AQBA-AdminWeb\\\\src\\\\admin\\\\pages\\\\SystemMonitoring.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SystemMonitoring() {\n  _s();\n  // Sample data for real-time performance and logs (you may replace it with actual data)\n  const [performanceMetrics, setPerformanceMetrics] = useState({\n    cpuUsage: 45,\n    memoryUsage: 72,\n    networkLatency: 120\n  });\n  const [serverStatus, setServerStatus] = useState('Online');\n  const [errorLogs, setErrorLogs] = useState([{\n    id: 1,\n    message: 'Error: Connection timeout at 14:32'\n  }, {\n    id: 2,\n    message: 'Warning: High memory usage at 14:45'\n  }]);\n  const [userActivityLogs, setUserActivityLogs] = useState([{\n    id: 1,\n    activity: 'User A logged in at 14:30'\n  }, {\n    id: 2,\n    activity: 'User B updated settings at 14:40'\n  }]);\n  const [alerts, setAlerts] = useState([{\n    id: 1,\n    alert: 'New update available'\n  }, {\n    id: 2,\n    alert: 'Scheduled maintenance at 16:00'\n  }]);\n\n  // You can implement logic here to fetch real-time data and update state\n\n  useEffect(() => {\n    // Simulate real-time metrics update (for demonstration)\n    const interval = setInterval(() => {\n      setPerformanceMetrics(prev => ({\n        ...prev,\n        cpuUsage: Math.floor(Math.random() * 100),\n        memoryUsage: Math.floor(Math.random() * 100),\n        networkLatency: Math.floor(Math.random() * 200)\n      }));\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"centered-heading\",\n      children: \"System Monitoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Monitor system performance and logs here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Real-time Performance Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CPU Usage: \", performanceMetrics.cpuUsage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Memory Usage: \", performanceMetrics.memoryUsage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Network Latency: \", performanceMetrics.networkLatency, \" ms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Server Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", serverStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errorLogs.map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: log.message\n        }, log.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Activity Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userActivityLogs.map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: log.activity\n        }, log.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Alerts & Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: alerts.map(alert => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: alert.alert\n        }, alert.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(SystemMonitoring, \"l8sT+xvJEKDIxLH16uVt/jmhyBY=\");\n_c = SystemMonitoring;\nexport default SystemMonitoring;\nvar _c;\n$RefreshReg$(_c, \"SystemMonitoring\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SystemMonitoring","_s","performanceMetrics","setPerformanceMetrics","cpuUsage","memoryUsage","networkLatency","serverStatus","setServerStatus","errorLogs","setErrorLogs","id","message","userActivityLogs","setUserActivityLogs","activity","alerts","setAlerts","alert","interval","setInterval","prev","Math","floor","random","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","log","_c","$RefreshReg$"],"sources":["C:/Users/janap/OneDrive/Desktop/app/AQBA-AdminWeb/src/admin/pages/SystemMonitoring.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction SystemMonitoring() {\r\n  // Sample data for real-time performance and logs (you may replace it with actual data)\r\n  const [performanceMetrics, setPerformanceMetrics] = useState({\r\n    cpuUsage: 45,\r\n    memoryUsage: 72,\r\n    networkLatency: 120,\r\n  });\r\n  \r\n  const [serverStatus, setServerStatus] = useState('Online');\r\n  const [errorLogs, setErrorLogs] = useState([\r\n    { id: 1, message: 'Error: Connection timeout at 14:32' },\r\n    { id: 2, message: 'Warning: High memory usage at 14:45' },\r\n  ]);\r\n\r\n  const [userActivityLogs, setUserActivityLogs] = useState([\r\n    { id: 1, activity: 'User A logged in at 14:30' },\r\n    { id: 2, activity: 'User B updated settings at 14:40' },\r\n  ]);\r\n\r\n  const [alerts, setAlerts] = useState([\r\n    { id: 1, alert: 'New update available' },\r\n    { id: 2, alert: 'Scheduled maintenance at 16:00' },\r\n  ]);\r\n\r\n  // You can implement logic here to fetch real-time data and update state\r\n\r\n  useEffect(() => {\r\n    // Simulate real-time metrics update (for demonstration)\r\n    const interval = setInterval(() => {\r\n      setPerformanceMetrics((prev) => ({\r\n        ...prev,\r\n        cpuUsage: Math.floor(Math.random() * 100),\r\n        memoryUsage: Math.floor(Math.random() * 100),\r\n        networkLatency: Math.floor(Math.random() * 200),\r\n      }));\r\n    }, 5000); // Update every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"centered-heading\">System Monitoring</h2>\r\n      <p>Monitor system performance and logs here.</p>\r\n\r\n      {/* Real-time performance metrics */}\r\n      <div className=\"stat-card\">\r\n        <h3>Real-time Performance Metrics</h3>\r\n        <p>CPU Usage: {performanceMetrics.cpuUsage}%</p>\r\n        <p>Memory Usage: {performanceMetrics.memoryUsage}%</p>\r\n        <p>Network Latency: {performanceMetrics.networkLatency} ms</p>\r\n      </div>\r\n\r\n      {/* Server Status */}\r\n      <div className=\"stat-card\">\r\n        <h3>Server Status</h3>\r\n        <p>Status: {serverStatus}</p>\r\n      </div>\r\n\r\n      {/* Error Logs */}\r\n      <div className=\"stat-card\">\r\n        <h3>Error Logs</h3>\r\n        <ul>\r\n          {errorLogs.map((log) => (\r\n            <li key={log.id}>{log.message}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* User Activity Logs */}\r\n      <div className=\"stat-card\">\r\n        <h3>User Activity Logs</h3>\r\n        <ul>\r\n          {userActivityLogs.map((log) => (\r\n            <li key={log.id}>{log.activity}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Alerts and Notifications */}\r\n      <div className=\"stat-card\">\r\n        <h3>Alerts & Notifications</h3>\r\n        <ul>\r\n          {alerts.map((alert) => (\r\n            <li key={alert.id}>{alert.alert}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SystemMonitoring;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}