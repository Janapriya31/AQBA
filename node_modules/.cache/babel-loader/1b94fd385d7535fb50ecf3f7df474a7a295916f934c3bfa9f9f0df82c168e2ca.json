{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janap\\\\OneDrive\\\\Desktop\\\\one drive\\\\OneDrive\\\\Documents\\\\AQBA-AdminWeb\\\\AQBA-AdminWeb\\\\src\\\\employee\\\\pages\\\\RequestQuestionBank.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequestQuestionBank = () => {\n  _s();\n  const [selectedTechnology, setSelectedTechnology] = useState('');\n  const [message, setMessage] = useState('');\n  const technologies = ['React', 'Node.js', 'Python', 'Java', 'Data Science', 'Machine Learning', 'SQL'];\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (selectedTechnology) {\n      setMessage(`Question bank for ${selectedTechnology} requested successfully!`);\n      // Perform additional logic for requesting question bank\n    } else {\n      setMessage('Please select a technology.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"request-question-bank-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"centered-heading\",\n      children: \"Request a Question Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Request a customized question bank for self-assessment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"technology-select\",\n        children: \"Select Technology:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"technology-select\",\n        value: selectedTechnology,\n        onChange: e => setSelectedTechnology(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Choose a technology --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), technologies.map((tech, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tech,\n          children: tech\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"request-button\",\n        children: \"Request Question Bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(RequestQuestionBank, \"o2uRmRH0z+LiARwjqbShlAfb2g4=\");\n_c = RequestQuestionBank;\nexport default RequestQuestionBank;\nvar _c;\n$RefreshReg$(_c, \"RequestQuestionBank\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RequestQuestionBank","_s","selectedTechnology","setSelectedTechnology","message","setMessage","technologies","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","map","tech","index","type","_c","$RefreshReg$"],"sources":["C:/Users/janap/OneDrive/Desktop/one drive/OneDrive/Documents/AQBA-AdminWeb/AQBA-AdminWeb/src/employee/pages/RequestQuestionBank.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst RequestQuestionBank = () => {\r\n  const [selectedTechnology, setSelectedTechnology] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const technologies = [\r\n    'React',\r\n    'Node.js',\r\n    'Python',\r\n    'Java',\r\n    'Data Science',\r\n    'Machine Learning',\r\n    'SQL',\r\n  ];\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (selectedTechnology) {\r\n      setMessage(`Question bank for ${selectedTechnology} requested successfully!`);\r\n      // Perform additional logic for requesting question bank\r\n    } else {\r\n      setMessage('Please select a technology.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"request-question-bank-container\">\r\n      <h2 className=\"centered-heading\">Request a Question Bank</h2>\r\n      <p>Request a customized question bank for self-assessment.</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"technology-select\">Select Technology:</label>\r\n        <select\r\n          id=\"technology-select\"\r\n          value={selectedTechnology}\r\n          onChange={(e) => setSelectedTechnology(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Choose a technology --</option>\r\n          {technologies.map((tech, index) => (\r\n            <option key={index} value={tech}>\r\n              {tech}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\" className=\"request-button\">\r\n          Request Question Bank\r\n        </button>\r\n      </form>\r\n      {message && <p className=\"message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestQuestionBank;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,YAAY,GAAG,CACnB,OAAO,EACP,SAAS,EACT,QAAQ,EACR,MAAM,EACN,cAAc,EACd,kBAAkB,EAClB,KAAK,CACN;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIP,kBAAkB,EAAE;MACtBG,UAAU,CAAC,qBAAqBH,kBAAkB,0BAA0B,CAAC;MAC7E;IACF,CAAC,MAAM;MACLG,UAAU,CAAC,6BAA6B,CAAC;IAC3C;EACF,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CZ,OAAA;MAAIW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7DhB,OAAA;MAAAY,QAAA,EAAG;IAAuD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9DhB,OAAA;MAAMiB,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAC3BZ,OAAA;QAAOkB,OAAO,EAAC,mBAAmB;QAAAN,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7DhB,OAAA;QACEmB,EAAE,EAAC,mBAAmB;QACtBC,KAAK,EAAEjB,kBAAmB;QAC1BkB,QAAQ,EAAGZ,CAAC,IAAKL,qBAAqB,CAACK,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;QAAAR,QAAA,gBAEvDZ,OAAA;UAAQoB,KAAK,EAAC,EAAE;UAAAR,QAAA,EAAC;QAAyB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAClDT,YAAY,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5BzB,OAAA;UAAoBoB,KAAK,EAAEI,IAAK;UAAAZ,QAAA,EAC7BY;QAAI,GADMC,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACThB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAACf,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAEjD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACNX,OAAO,iBAAIL,OAAA;MAAGW,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEP;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACd,EAAA,CAjDID,mBAAmB;AAAA0B,EAAA,GAAnB1B,mBAAmB;AAmDzB,eAAeA,mBAAmB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}