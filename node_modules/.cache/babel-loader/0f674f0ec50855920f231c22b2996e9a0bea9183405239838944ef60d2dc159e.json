{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SystemMonitoring(){// Sample data for real-time performance and logs (you may replace it with actual data)\nconst[performanceMetrics,setPerformanceMetrics]=useState({cpuUsage:45,memoryUsage:72,networkLatency:120});const[serverStatus,setServerStatus]=useState('Online');const[errorLogs,setErrorLogs]=useState([{id:1,message:'Error: Connection timeout at 14:32'},{id:2,message:'Warning: High memory usage at 14:45'}]);const[userActivityLogs,setUserActivityLogs]=useState([{id:1,activity:'User A logged in at 14:30'},{id:2,activity:'User B updated settings at 14:40'}]);const[alerts,setAlerts]=useState([{id:1,alert:'New update available'},{id:2,alert:'Scheduled maintenance at 16:00'}]);// You can implement logic here to fetch real-time data and update state\nuseEffect(()=>{// Simulate real-time metrics update (for demonstration)\nconst interval=setInterval(()=>{setPerformanceMetrics(prev=>({...prev,cpuUsage:Math.floor(Math.random()*100),memoryUsage:Math.floor(Math.random()*100),networkLatency:Math.floor(Math.random()*200)}));},5000);// Update every 5 seconds\nreturn()=>clearInterval(interval);},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"centered-heading\",children:\"System Monitoring\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Monitor system performance and logs here.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Real-time Performance Metrics\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"CPU Usage: \",performanceMetrics.cpuUsage,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Memory Usage: \",performanceMetrics.memoryUsage,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Network Latency: \",performanceMetrics.networkLatency,\" ms\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Server Status\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",serverStatus]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Error Logs\"}),/*#__PURE__*/_jsx(\"ul\",{children:errorLogs.map(log=>/*#__PURE__*/_jsx(\"li\",{children:log.message},log.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"User Activity Logs\"}),/*#__PURE__*/_jsx(\"ul\",{children:userActivityLogs.map(log=>/*#__PURE__*/_jsx(\"li\",{children:log.activity},log.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Alerts & Notifications\"}),/*#__PURE__*/_jsx(\"ul\",{children:alerts.map(alert=>/*#__PURE__*/_jsx(\"li\",{children:alert.alert},alert.id))})]})]});}export default SystemMonitoring;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","SystemMonitoring","performanceMetrics","setPerformanceMetrics","cpuUsage","memoryUsage","networkLatency","serverStatus","setServerStatus","errorLogs","setErrorLogs","id","message","userActivityLogs","setUserActivityLogs","activity","alerts","setAlerts","alert","interval","setInterval","prev","Math","floor","random","clearInterval","children","className","map","log"],"sources":["C:/Users/janap/OneDrive/Desktop/app/AQBA-AdminWeb/src/admin/pages/SystemMonitoring.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction SystemMonitoring() {\r\n  // Sample data for real-time performance and logs (you may replace it with actual data)\r\n  const [performanceMetrics, setPerformanceMetrics] = useState({\r\n    cpuUsage: 45,\r\n    memoryUsage: 72,\r\n    networkLatency: 120,\r\n  });\r\n  \r\n  const [serverStatus, setServerStatus] = useState('Online');\r\n  const [errorLogs, setErrorLogs] = useState([\r\n    { id: 1, message: 'Error: Connection timeout at 14:32' },\r\n    { id: 2, message: 'Warning: High memory usage at 14:45' },\r\n  ]);\r\n\r\n  const [userActivityLogs, setUserActivityLogs] = useState([\r\n    { id: 1, activity: 'User A logged in at 14:30' },\r\n    { id: 2, activity: 'User B updated settings at 14:40' },\r\n  ]);\r\n\r\n  const [alerts, setAlerts] = useState([\r\n    { id: 1, alert: 'New update available' },\r\n    { id: 2, alert: 'Scheduled maintenance at 16:00' },\r\n  ]);\r\n\r\n  // You can implement logic here to fetch real-time data and update state\r\n\r\n  useEffect(() => {\r\n    // Simulate real-time metrics update (for demonstration)\r\n    const interval = setInterval(() => {\r\n      setPerformanceMetrics((prev) => ({\r\n        ...prev,\r\n        cpuUsage: Math.floor(Math.random() * 100),\r\n        memoryUsage: Math.floor(Math.random() * 100),\r\n        networkLatency: Math.floor(Math.random() * 200),\r\n      }));\r\n    }, 5000); // Update every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"centered-heading\">System Monitoring</h2>\r\n\r\n      <p>Monitor system performance and logs here.</p>\r\n\r\n      {/* Real-time performance metrics */}\r\n      <div className=\"stat-card\">\r\n        <h3>Real-time Performance Metrics</h3>\r\n        <p>CPU Usage: {performanceMetrics.cpuUsage}%</p>\r\n        <p>Memory Usage: {performanceMetrics.memoryUsage}%</p>\r\n        <p>Network Latency: {performanceMetrics.networkLatency} ms</p>\r\n      </div>\r\n\r\n      {/* Server Status */}\r\n      <div className=\"stat-card\">\r\n        <h3>Server Status</h3>\r\n        <p>Status: {serverStatus}</p>\r\n      </div>\r\n\r\n      {/* Error Logs */}\r\n      <div className=\"stat-card\">\r\n        <h3>Error Logs</h3>\r\n        <ul>\r\n          {errorLogs.map((log) => (\r\n            <li key={log.id}>{log.message}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* User Activity Logs */}\r\n      <div className=\"stat-card\">\r\n        <h3>User Activity Logs</h3>\r\n        <ul>\r\n          {userActivityLogs.map((log) => (\r\n            <li key={log.id}>{log.activity}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Alerts and Notifications */}\r\n      <div className=\"stat-card\">\r\n        <h3>Alerts & Notifications</h3>\r\n        <ul>\r\n          {alerts.map((alert) => (\r\n            <li key={alert.id}>{alert.alert}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SystemMonitoring;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}